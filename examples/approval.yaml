title: "HR approvals"
# optional, but recommended, if in the future we will have breaking changes this allows to migrate on the fly.
version: 1

steps:
  - name: "send emails to step path_1_step_1"
    description: >
      Send email by given step
    label: path_1_step_1_email
    do:
      type: REST
      heartbeat-timeout: 180 # seconds. default 10.
      options:
        timeout: 60 #seconds
        method: GET
        url: >-
          {% input.context.url %}/send-emails/path_1_step_1
        headers:
          authorization:
            - >-
              {% input.context["email-authorization"] %}
          tenant:
            - >-
              {% input.context["tenant"] %}
          namespace:
            - >-
              {% input.context["namespace"] %}
  - name: "Path 1 Step 1: role A"
    label: path_1_step_1
    description: >
      this will be called as an event. I.e. we are awaiting for an external call (rest,command line etc...).
    do:
      type: EVALUATE
      options:
        result: >-
          {"status": "{% input.context["status"] %}" }

decisions:
  - name: check access
    label: check_access # label must be unique in all template labels
    input: # only these inputs are allowed. Possibly, if not supplied, an error will be raised. 
      - label: request_status
        concept: flow_status #optional, see below at concepts.
      - label: roles
      - label: allowed-approval
      - label: allowed-skipped
    result: >
      default result="approved"
      allowed-approval{input["roles"][_]==input["allowed-approval"][_]}
      allowed-skip{input["roles"][_]==input["allowed-skipped"][_]}
      denied-approval{v:=["approve","decline"];request_status=v[_];not allowed-approval}
      denied-skip{request_status="skipped";not allowed-skip}
      result="denied"{denied-approval}else{denied-skip}
concepts:
  - name: flow_status
    label: flow_status #unique name
    type: string
    validations:
      - >
        default result=false
        result{input.flow_status=="skipped"}else{input.flow_status=="approved"}else{input.flow_status=="declined"}