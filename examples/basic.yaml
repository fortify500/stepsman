title: "STEPSMAN Hello World"
steps:
  - name: "Starting" # mandatory
    description: > # optional
      example for a rest call
    label: starting
    retries: 3  # by default, this means it won't be retried. Technically will become 1 in the database if never executed, once it is in progress it will be 0. e.g. a 2 will become 3 in the database initially.
    do: # optional
      type: REST # heartbeats of set InProgress and finally set Done. However, this doesn't mean events cannot already start for path_1_step_?
      complete-by: 200 # default 3600. This is a hard limit whereby even an async or any error will cause a fail and move to pending.
      heartbeat-timeout: 50 # seconds. the do will send heartbeats when calling the url in asynchronous cases. Currently only synchronous calls are supported so heart-beat timeout is essentially a timeout.
      options:
        timeout: 40 #overall timeout make sense timeout would be less than the heartbeat-timeout
        max-response-body-bytes: 524288
        method: GET
        url: https://jsonplaceholder.typicode.com/todos/1
    on:
      pre-done:
        rules:
          - then:
              do:
                - label: emails
                  context: >
                    {% input.context %}
                - label: next
                  context: >
                    { "result": "next", "title": "{% input.template.title %}"}  
  - name: "next"
    description: >
      example for a rest call 2
    label: next
    retries: 3
    do:
      type: REST
      complete-by: 200
      heartbeat-timeout: 50
      options:
        timeout: 40
        max-response-body-bytes: 524288
        method: GET
        url: https://jsonplaceholder.typicode.com/todos/2
    on:
      pre-done:
        rules:
          - then:
              do:
                - label: finishing
                  context: >
                    { "result": "finish", "status-phrase": "{% input.labels["starting"]["result"]["status-phrase"] %}"}
  - name: "Finishing" # mandatory
    description: > # optional
      example for a rest call 3
    label: finishing
    do:
      type: REST
      heartbeat-timeout: 50
      options:
        timeout: 40
        max-response-body-bytes: 524288
        method: GET
        url: https://jsonplaceholder.typicode.com/todos/3
  - name: "send emails we are starting"
    description: >
      Send email by given step. Example for an async rest call
    label: emails
    do:
      type: REST
      heartbeat-timeout: 50 # we send the the callee our run-id and step label in the call headers - stepsman-label, stepsman-run-id. 
      # In an async flow, the callee returns stepsman-complete-by (seconds) which can only be lower than the template complete-by or 0 for template maximum.
      # if the callee does not return stepsman-complete-by it will by a synchronous call.
      # It need to get back to us and update the heartbeat before the timeout if he is going to be late, otherwise it MAY be retried.
      # In this case it is not serious that emails are not sent but anyone who did not get the email will not press
      # Starting, for example, in an approval process. Therefor we wish to track the status.
      options:
        timeout: 60 #seconds
        method: GET
        url: https://jsonplaceholder.typicode.com/todos/4
        headers:
          authorization:
            - '{% input.context["email-authorization"] %}'